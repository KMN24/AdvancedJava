package otherThemes.lesson40;

// todo Аннотации. Основы
// @ - Аннотация Н: @Overriding, @Overloading, @Test, ...

// todo Java Аннотоция - это специальный тип КОММЕНТАРИЕВ в вашем коде с помощью котрых можно:
// Передавать какие-либо инструкции для Java компилятора.
// Передавать какие-либо инструкции для анализаторов исходного кода ( Н: инструменты, которые генерируют документацию
//      из исходного кода.
// Передавать МЕТАДАННЫЕ, которые могут быть использованы либо вашим Java приложением ( с помощью рефлексии),
//      либо другими приложениями или фреймворками (Н: Spring Framework)

//              Что такое метаданные?
// *Данные о данных.
// *Не влияют на непосредственную работу программы, но могут быть выявлены другими программами на этапе компилирования
//  или разработки, которые при этом скорректируют свою работу.
// Примеры:
// *Тег <meta> в HTML, который используется для хранения информации о странице, предназначенной для браузеров и
//   поисковых систем (ключевые слова, например).
// *Аннотации в Java, которые дают дополнительную информацию о коде

//                  Java Аннотации
// Могут быть аннотированы класс, метод, параметр, поле и многое другое
// В Java уже есть встроенные аннотации, которые чаще всего используются (@Override, @Deprecated, @SuppressWarnings)
// Можно создать свои аннотации (будет рассмотрено на следующем уроке)

public class Lesson40 {
    public static void main(String[] args) {
        // Посмотрим Java аннотации @Override, @Deprecated, @SuppressWarnings
        // Создадим классы A and B и в классе  B переопределим method

        B b = new B();
        b.test(); // Hello from class B

        // @Deprecated - говорит о том что какой-то  метод устарел и не нужно его использовать
        // Создадим класс DeprecatedTest и внутри метод myMethod()

        DeprecatedTest test = new DeprecatedTest();
        test.myMethod(); // Если метод @Deprecated то появится линия
        // Но даже если этот метод устарел мы можем использовать его, просто Java говорит что не нужно испол-ть

        // @SuppressWarnings - нужно для того, чтобы подавлять предупреждения
        // Если у нас будут предупреждения в методах то мы можем исп-ть эту аннотацию и преду-е в консоли не появится
    }
}

